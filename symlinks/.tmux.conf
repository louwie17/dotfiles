# Use vim keybindings in copy mode
setw -g mode-keys vi
#
# # Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# # Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#set-option -g default-command "reattach-to-user-namespace -l zsh"8

# Fix prefix
unbind C-b
set-option -g prefix C-a

# Refresh config
unbind-key r
bind-key r source-file ~/.tmux.conf

# Panes
bind-key C-a last-window
bind-key | split-window -h -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

setw -g mode-keys vi
bind h select-pane -L
bind C-h select-pane -L
bind j select-pane -D
bind C-j select-pane -D
bind k select-pane -U
bind C-k select-pane -U
bind l select-pane -R
bind C-l select-pane -R

# Mouse
set-window-option -g mode-mouse on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on

# Misc
set -g history-limit 10000
set -g base-index 1
setw -g aggressive-resize on
setw -g automatic-rename off
set -g default-terminal "screen-256color"
bind-key a send-prefix
set -s escape-time 0
set-option -g default-shell $SHELL
set -g xterm-keys on

# Status bar
set -g status-bg colour27

set -g status-left-length 50
set -g status-left ""
set -g status-left-bg colour8
set -g status-left-fg white

set -g status-right-length 50
set -g status-right "#S"
set -g status-right-bg colour8
set -g status-right-fg white

set -g status-justify "left"

set-option -g pane-active-border-fg colour27

setw -g window-status-fg white
setw -g window-status-format "#I:[#W]"

setw -g window-status-current-fg white
setw -g window-status-current-format "#I:[#W]"

# Powerline
source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf

# Updates for tmux 1.9's current pane splitting paths.
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'
